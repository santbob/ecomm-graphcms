import Head from 'next/head'
import Image from 'next/image';
import Layout from '@components/Layout';
import Header from '@components/Header';
import Container from '@components/Container';
import Button from '@components/Button';

import styles from '@styles/Page.module.scss'

import {
  ApolloClient,
  InMemoryCache,
  gql
} from "@apollo/client";

const client = new ApolloClient({
  uri: 'https://api-us-west-2.graphcms.com/v2/cl1wywy4e0njk01yx0lf5ebto/master',
  cache: new InMemoryCache()
});


export default function Category({ category, products }) {
  return (
    <Layout>
      <Head>
        <title>{category.name}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Container>
        <h1>{category.name}</h1>

        <h2>Products</h2>

        <ul className={styles.products}>
          {products.map(product => {
            return (
              <li key={product.id}>
                <a href="#">
                  <div className={styles.productImage}>
                    <Image width={product.image.width} height={product.image.height} src={product.image.url} alt="" />
                  </div>
                  <h3 className={styles.productTitle}>
                    {product.name}
                  </h3>
                  <p className={styles.productPrice}>
                    ${product.price?.toFixed(2)}
                  </p>
                </a>
                <p>
                  <Button className="snipcart-add-item"
                    data-item-id={product.id}
                    data-item-price={product.price}
                    data-item-url={`/products/${product.slug}`}
                    data-item-image={product.image.url}
                    data-item-name={product.name}>
                    Add to Cart
                  </Button>
                </p>
              </li>
            )
          })}
        </ul>
      </Container>
    </Layout>
  )
}
export async function getStaticProps({ params }) {
  const { data } = await client.query({
    query: gql`
      query PageCategory($slug: String) {
        category(where: {slug: $slug}) {
          id
          name
          slug
          products {
            id
            image
            name
            price
            slug
          }
        }
      }`,
    variables: {
      slug: params.categorySlug,
    }
  });
  console.log("category data ", data);
  return {
    props: {
      category: data.category,
      products: data.category.products,
    }
  }
}
export async function getStaticPaths() {
  const { data } = await client.query({
    query: gql`
      query PageCategories {
        categories {
          id
          slug
        }
      }`
  });
  console.log("paths ", data);
  const paths = data.categories.map(category => {
    return {
      params: {
        categorySlug: category.slug
      }
    }
  })
  return {
    paths,
    fallback: false
  }
}